# ============================================
# REQUIRED ENVIRONMENT VARIABLES
# ============================================

# Django Core Settings
SECRET_KEY=your-secret-key-here-change-this-to-a-random-string-min-50-chars
DJANGO_ALLOWED_HOSTS=.yourdomain.com yourdomain.com localhost 127.0.0.1
CSRF_TRUSTED_ORIGINS=https://yourdomain.com

# Application Settings
APP_DOMAIN=yourdomain.com
APP_PROTOCOL=https
APP_FROM_EMAIL=noreply@yourdomain.com

# Database Settings (PostgreSQL)
POSTGRES_USER=db_dictionary_user
POSTGRES_PASSWORD=db_dictionary_password
POSTGRES_DB=db_dictionary
SQL_USER=db_dictionary_user
SQL_PASSWORD=db_dictionary_password
SQL_DATABASE=db_dictionary

# ============================================
# OPTIONAL ENVIRONMENT VARIABLES
# ============================================

# Django Settings
DEBUG=0
DJANGO_SETTINGS_MODULE=djdict.settings

# Database Settings (with defaults)
SQL_ENGINE=django.db.backends.postgresql
SQL_PORT=5432
SQL_HOST=db

# Email Settings (optional - leave empty to disable email functionality)
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_HOST_USER=
EMAIL_HOST_PASSWORD=

# Session & Cache Settings (defaults are fine for most cases)
SESSION_ENGINE=dictionary.backends.sessions.cached_db
EMAIL_BACKEND=djcelery_email.backends.CeleryEmailBackend

# Redis Settings
REDIS_URL=redis://redis:6379/

# RabbitMQ Settings (Celery Broker)
RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/

# Superuser Creation (optional - auto-creates admin user on first deployment)
DJANGO_SUPERUSER_USERNAME=admin
DJANGO_SUPERUSER_EMAIL=admin@yourdomain.com
DJANGO_SUPERUSER_PASSWORD=change-this-secure-password

# ============================================
# ENVIRONMENT VARIABLE DESCRIPTIONS
# ============================================

# SECRET_KEY:
#   Django's secret key for cryptographic signing. Must be at least 50 characters.
#   Generate with: python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"

# DJANGO_ALLOWED_HOSTS:
#   Space-separated list of domains that Django will serve.
#   IMPORTANT: Must be SPACE-separated, not comma-separated!
#   Example: .yourdomain.com yourdomain.com localhost 127.0.0.1

# CSRF_TRUSTED_ORIGINS:
#   Space-separated list of trusted origins for CSRF protection.
#   Must include https:// or http://
#   Example: https://yourdomain.com https://www.yourdomain.com

# APP_DOMAIN:
#   The primary domain where your application is hosted (without protocol).
#   Used for generating URLs in emails and notifications.
#   Example: yourdomain.com

# APP_PROTOCOL:
#   Protocol for the application (http or https).
#   Default: https (recommended for production)

# APP_FROM_EMAIL:
#   Email address used as the "From" address for outgoing emails.
#   Example: noreply@yourdomain.com

# POSTGRES_USER, POSTGRES_PASSWORD, POSTGRES_DB:
#   PostgreSQL database credentials for the database container.

# SQL_USER, SQL_PASSWORD, SQL_DATABASE:
#   PostgreSQL database credentials for Django.
#   MUST match the POSTGRES_* values above.

# EMAIL_HOST, EMAIL_PORT:
#   SMTP server settings for sending emails.
#   For Gmail: smtp.gmail.com:587
#   For other providers, check their SMTP documentation.

# EMAIL_HOST_USER, EMAIL_HOST_PASSWORD:
#   SMTP authentication credentials.
#   For Gmail with 2FA: Use an App-Specific Password

# DJANGO_SUPERUSER_USERNAME, DJANGO_SUPERUSER_EMAIL, DJANGO_SUPERUSER_PASSWORD:
#   If set, automatically creates a superuser on first deployment.
#   The script is idempotent - won't create duplicates on redeployments.
